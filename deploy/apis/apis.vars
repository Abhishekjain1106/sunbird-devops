# vim: set ft=sh ts=4 sw=4 tw=0 et :
#!/bin/bash
set -eo pipefail

# Variable declaration {{{

learning_host="${kp_ip}:8080/learning-service"
categories="board medium gradeLevel subject"
username=admin
password='P@ssword1'
phone_number=9876543410
org=sunbird
framework="edu"
board="edu"
medium="english hindi malayalam"
gradeLevel="class1 class2 class3"
subject="maths english science"

rootOrg=$(cat <<EOF
{ 
	"request":
	{ 
		"orgName": "${org}",
		"description": "${org}",
		"isRootOrg": true,
		"channel": "${org}"
	} 
}
EOF
)

channel=$(cat <<EOF
{
   "request": {
      "channel":{
          "name":"${org}",
          "description":"${org} Channel",
          "code":"${org_id}"
      }
    }
}
EOF
)

framework=$(cat <<EOF
{
	"request": {
		"framework": {
			"name": "${framework}",
			"description": "${framework} framework",
			"code": "${framework}",
			"channels":[
				{
					"identifier":"${org_id}"
				}
			]
			
		}
	}
}
EOF
)

category=$(cat <<EOF
{
   "request": {
      "category":{
          "name":"${item}",
          "description":"",
          "code":"${item}"
      }
    }
}
EOF
)

terms=$(cat <<EOF
{
"request": {
   "term": {
        "name": "${term}",
        "code": "${term}",
        "description":"${term}"
    }
 }
}
EOF
)

user_data=$(cat <<EOF
{ 
    "request":
    { 
        "firstName": "${username}",
        "lastName": "${username}",
        "password": "${password}}",
        "phone": "${phone_number}",
        "userName": "${username}",
        "channel": "${org}",
        "phoneVerified": true
    } 
}
EOF
)
#}}}

echo -e "\n\n Restarting deployments\n\n"
Kubectl rollout restart deployments -n dev 

echo -e "Waiting for all apps to come up"
sleep 120

echo installing jq
sudo apt install jq -y

# Creating form and other apis{{{

echo -e "\nCreating x-auth token"
x_auth_token=$(curl --location --request POST "https://sunbird6.centralindia.cloudapp.azure.com/auth/realms/sunbird/protocol/openid-connect/token" \
--header 'Content-Type: application/x-www-form-urlencoded' \
--header "Authorization: Bearer ${jwt_token}" \
--data-raw 'client_id=admin-cli&password=password&grant_type=password&username=admin' | jq '.access_token' | xargs )
echo x_auth_token=$x_auth_token >> ~/api_details.txt

# Creating root org
echo -e "Creating root org\n"
org_id=$(curl --location --request POST "https://${domain_name}/api/org/v1/create" \
--header 'Content-Type: application/json' \
--header 'accept: application/json' \
--header "Authorization: Bearer ${jwt_token}" \
--header "x-authenticated-user-token: ${x_auth_token}" \
--data-raw "${rootOrg}" | jq '.result.organisationId' | xargs )
echo org_id=$org_id >> ~/api_details.txt

# Creating channel
echo -e "\n\nCreating channel"
curl --location --request POST --header 'Content-Type: application/json' \
    "http://${learning_host}/channel/v3/create" \
    --data-raw "${channel}"

# Creating framework
curl --location --request POST "${learning_host}/framework/v3/create" \
--header 'Content-Type: application/json' \
--header 'X-Channel-Id: ${org_id}' \
--data-raw "${framework}"

# Creating categories
echo -e "\n\nCreating categories"
for item in categories; do
    curl --location --request POST "${learning_host}/framework/v3/category/create?framework=${framework}" \
    --header 'Content-Type: application/json' \
    --data-raw "${category}"
done

# Creating terms
echo -e "\n\nCreating terms"
for item in categories;do
    for term in ${item};do
        curl --location --request POST "${learning_host}/framework/v3/term/create?framework=${framework}&category=${item}" \
        --header 'Content-Type: application/json' \
        --data-raw "${term}"
        sleep .5
    done
    sleep .5
done

sleep 1
# Publishing framework
echo -e "\n\nPublising framework"
curl --location --request POST "${learning_host}/framework/v3/publish/${framework}" \
--header 'Content-Type: application/json' \
--data-raw '{}'
#}}}
