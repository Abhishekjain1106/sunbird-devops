- name: ensure backup dir exists
  file: path="{{ postgresql_backup_dir }}" state=directory owner={{ postgres_user }} group={{ postgres_user }}

- set_fact:
    postgresql_backup_gzip_file_name: "postgresql_backup_{{ lookup('pipe', 'date +%Y-%m-%d-%H-%M-%S') }}.sql.gz"

- set_fact:
    postgresql_backup_gzip_file_path: "{{ postgresql_backup_dir }}/{{ postgresql_backup_gzip_file_name }}"

- name: Save backup
  command: bash -lc "pg_dumpall | gzip > {{ postgresql_backup_gzip_file_path }}"
  become_user: "{{ postgres_user }}"
  async: 3600
  poll: 10

- name: Add Azure apt repository
  apt_repository: repo='deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ wheezy main' state=present

- name: Import Azure signing key
  apt_key: keyserver=packages.microsoft.com id=417A0893

- name: ensure apt-transport-https is installed
  apt: name=apt-transport-https

- name: ensure azure-cli is installed
  apt: name=azure-cli update_cache=yes cache_valid_time={{ apt_cache_valid_time }}

- name: Upload to azure blob storage
  command: azure storage blob upload {{ postgresql_backup_gzip_file_path }} {{ postgresql_backup_azure_container_name }}
  environment:
    AZURE_STORAGE_ACCOUNT: "{{ postgresql_backup_azure_storage_account_name }}"
    AZURE_STORAGE_ACCESS_KEY: "{{ postgresql_backup_azure_storage_access_key }}"