- name: Stop the cassandra 
  become: yes
  service: name=cassandra state=stopped
  
- set_fact:
    cassandra_restore_gzip_file_path: "{{ cassandra.restore_dir }}/{{ cassandra_restore_gzip_file_name }}"
    
- name: Download to azure blob storage
  command: az storage blob download --name {{ cassandra_restore_gzip_file_name }} --file {{ cassandra_restore_gzip_file_path }} --container-name {{ cassandra.backup_azure_container_name }}
  environment:
    AZURE_STORAGE_ACCOUNT: "{{ cassandra.backup_azure_storage_account_name }}"
    AZURE_STORAGE_KEY: "{{ cassandra.backup_azure_storage_access_key }}"
  async: 3600
  poll: 10
  
- name: unarchieve restore artifact
  become: yes
  unarchive: src={{user_home}}/{{ cassandra_restore_gzip_file_name }} dest={{user_home}}/ copy=no
  
- name: Remove the restroe artefact
  become: yes
  file: path={{user_home}}/cassandra* state=absent
  
- name: Remove the old data
  become: yes
  file: path=/var/lib/cassandra/data/* state=absent
  
- name: Replace the new data
  become: yes
  copy: src={{user_home}}/snapshot-{{snapshot}}/* dest=/var/lib/cassandra/data/ 
  
- name: copy the backup script 
  become: yes
  template: src=nodetool.j2  dest={{user_home}}/nodetool.sh mode=0755 
  

- name: Start the cassandra 
  become: yes
  service: name=cassandra state=started
  
- name: run the backup script
  become: yes
  shell: sh {{user_home}}/nodetool.sh
  