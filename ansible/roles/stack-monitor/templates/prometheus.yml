global:
  scrape_interval:     {{ prometheus_scrape_interval }}
  evaluation_interval: {{ prometheus_scrape_interval }}
  external_labels:
    monitor: 'Prometheus-Monitor'

rule_files:
  - '/etc/prometheus-rules/alertrules.nodes'
  - '/etc/prometheus-rules/alertrules.task'
  - '/etc/prometheus-rules/alertrules.es'
  - '/etc/prometheus-rules/alertrules.logs'
  - '/etc/prometheus-rules/alertrules.postgresql'
  - '/etc/prometheus-rules/alertrules.kong'
  - '/etc/prometheus-rules/alertrules.services'

scrape_configs:
  - job_name: 'cadvisor'
    dns_sd_configs:
    - names:
      - 'tasks.cadvisor'
      type: 'A'
      port: 8080

  - job_name: 'node-exporter'
    dns_sd_configs:
    - names:
      - 'tasks.node-exporter'
      type: 'A'
      port: 9100

  - job_name: 'alertmanager'
    metrics_path: /alertmanager/metrics
    dns_sd_configs:
    - names:
      - 'tasks.alertmanager'
      type: 'A'
      port: 9093

  - job_name: 'elasticsearch-exporter'
    static_configs:
      - targets: ['monitor_elasticsearch_exporter:9108']
        #labels:
        #  "owner": "devops_team"

  - job_name: 'log-elasticsearch-exporter'
    static_configs:
      - targets: ['monitor_log_elasticsearch_exporter:9108']
        #labels:
        #  "owner": "devops_team"
  - job_name: 'master-postgres-exporter'
    static_configs:
      - targets: ['monitor_master_postgres_exporter:9187']
        #labels:
        #  "owner": "devops_team"

  {% if groups['postgresql-slave'][0] is defined %}
  # This empty line ensures indentation is correct after ansible jinja2 template is materialized
  - job_name: 'slave-postgres-exporter'
    static_configs:
      - targets: ['monitor_slave_postgres_exporter:9187']
        #labels:
        #  "owner": "devops_team"
  {% endif %}

  - job_name: 'statsd-exporter'
    static_configs:
      - targets: ['monitor_statsd_exporter:9102']
        #labels:
        #  "owner": "devops_team"

  - job_name: 'kong-cluster-exporter'
    static_configs:
      - targets: ['monitor_kong_cluster_exporter:9158']
        #labels:
        #  "owner": "devops_team"

  - job_name: 'docker-service-replicas-exporter'
    static_configs:
      - targets: ['{{ groups['swarm-bootstrap-manager'][0] }}:9258']
        #labels:
        #  "owner": "devops_team"

  - job_name: 'availability_composite_search'
    metrics_path: /probe
    params:
      module: [composite_search]  # Look for a HTTP 200 response.
    static_configs:
    - targets:
      - https://{{api__host}}/api/composite/v1/search
      labels:
        "owner": "app_team"
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: monitor_blackbox-exporter:9115  # Blackbox exporter.

  - job_name: 'availability_page_assemble'
    metrics_path: /probe
    params:
      module: [page_assemble]  # Look for a HTTP 200 response.
    static_configs:
    - targets:
      - https://{{api__host}}/api/data/v1/page/assemble
      labels:
        "owner": "app_team"
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: monitor_blackbox-exporter:9115  # Blackbox exporter.

  - job_name: 'availability_general'
    metrics_path: /probe
    params:
      module: [http_2xx]  # Look for a HTTP 200 response.
    static_configs:
    - targets:
      - http://adminutil_adminutil:4000/health
      - http://api-manager_echo:9595/hello
      - http://kibana:5601/
      - https://{{api__host}}/grafana
      - https://{{api__host}}/auth/realms/sunbird/protocol/openid-connect/auth?client_id=portal&state=foo&redirect_uri=https%3A%2F%2F{{api__host}}%2Fprivate%2Findex%3Fauth_callback%3D1&scope=openid&response_type=code
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: monitor_blackbox-exporter:9115  # Blackbox exporter.

  - job_name: 'availability_application'
    metrics_path: /probe
    params:
      module: [http_2xx]  # Look for a HTTP 200 response.
    static_configs:
    - targets:
      - https://{{api__host}}
      - http://player_player:3000
      - http://content_service_content_service:5000/health
      - http://learner-service:9000/health
      labels:
        "owner": "app_team"
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: monitor_blackbox-exporter:9115  # Blackbox exporter.

  - job_name: 'availability_dashboard_oauth'
    metrics_path: /probe
    params:
      module: [http_4xx_auth]
    static_configs:
    - targets:
      - https://{{api__host}}/dashboard
      #labels:
      #  "owner": "devops_team"
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: monitor_blackbox-exporter:9115  # Blackbox exporter.

  - job_name: 'prometheus'
    metrics_path: /prometheus/metrics
    static_configs:
      - targets: ['localhost:9090']
        #labels:
        #  "owner": "devops_team"

  - job_name: 'cassandra-exporter'
    static_configs:
      - targets: ['cassandra_jmx_exporter:5556']
        #labels:
        #  "owner": "devops_team"

  - job_name: 'vm-node-exporter'
    static_configs:
      - targets: {{ groups[env] | difference(["localhost"]) | map('regex_replace', '^(.*)$', '\\1:9101' ) | list | to_yaml }}
        #labels:
        #  "owner": "devops_team"

  {% if static_site_url is defined %}
  # This empty line ensures indentation is correct after ansible jinja2 template is materialized
  - job_name: 'availability_static_site'
    metrics_path: /probe
    params:
      module: [http_2xx]  # Look for a HTTP 200 response.
    static_configs:
    - targets:
      - {{static_site_url}}
      labels:
        "owner": "site_team"
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: monitor_blackbox-exporter:9115  # Blackbox exporter.
  {% endif %}

  - job_name: 'availability_mongodb'
    metrics_path: /probe
    params:
      module: [tcp_connect]
    static_configs:
    - targets:
      - {{ sunbird_mongo_ip }}:{{ sunbird_mongo_port }}
      labels:
        "owner": "app_team"
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: monitor_blackbox-exporter:9115  # Blackbox exporter.

  - job_name: 'availability_cassandra'
    metrics_path: /probe
    params:
      module: [tcp_connect]
    static_configs:
    - targets:
      - {{ sunbird_cassandra_host }}:{{ cassandra_port }}
      labels:
        "owner": "site_team"
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: monitor_blackbox-exporter:9115  # Blackbox exporter.
