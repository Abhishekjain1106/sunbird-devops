server {
  listen 80;
  listen [::]:80;
  server_name {{ proxy.server_name }};

  return 301 https://{{ proxy.server_name }}$request_uri;
}

server {
  client_max_body_size 50M;
  listen                443 ssl;
  server_name           {{ proxy.server_name }};
  ssl_certificate       /run/secrets/site.crt;
  ssl_certificate_key   /run/secrets/site.key;

  proxy_set_header    Host              $host;
  proxy_set_header    X-Real-IP         $remote_addr;
  proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
  proxy_set_header    X-Forwarded-SSL   on;
  proxy_set_header    X-Forwarded-Proto $scheme;

  ignore_invalid_headers off;  #pass through headers from Jenkins which are considered invalid by Nginx server.
  resolver 127.0.0.11 valid=5s;

{% if keycloak | default(False) %}

  location ~* ^/auth/realms/(.+)/token/introspect/ {
        return 301 https://$host/api/auth/v1/realms/$1/token/introspect;
  }
  location ~* ^/auth/realms/(.+)/token/ {
    return 301 https://$host/api/auth/v1/realms/$1/token/;
  }
  location ~* ^/auth/realms/(.+)/userinfo/ {
    return 301 https://$host/api/auth/v1/realms/$1/userinfo/;
  }
  location ~* ^/auth/realms/(.+)/logout/ {
    return 301 https://$host/api/auth/v1/realms/$1/logout/;
  }
  location ~* ^/auth/realms/(.+)/certs/ {
    return 301 https://$host/api/auth/v1/realms/$1/certs/;
  }
  location ~* ^/auth/realms/(.+)/clients-registrations/ {
    return 301 https://$host/api/auth/v1/realms/$1/clients-registrations/;
  }

  location /auth/ {
    proxy_pass {{ keycloak_url }}/auth/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
{% endif %}

  location /api/ {
    set $target http://api-manager_kong:8000;
    rewrite ^/api/(.*) /$1 break;
    proxy_pass $target;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 1;
    proxy_send_timeout 30;
    proxy_read_timeout 30;
  }

  location /dashboard/ {
    set $target http://logger_oauth:4111;
    rewrite ^/dashboard/(.*) /$1 break;
    proxy_pass $target;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 1;
    proxy_send_timeout 30;
    proxy_read_timeout 30;
  }

  location /grafana/ {
    set $target http://monitor_grafana:3000;
    rewrite ^/grafana/(.*) /$1 break;
    proxy_pass $target;
  }

  location /oauth2/ {
    set $target http://logger_oauth:4111;
    proxy_pass $target;
  }

  location /prometheus/ {
    set $target http://monitor_prometheus:9090/;
    rewrite ^/prometheus/(.*) /$1 break;
    proxy_pass $target;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 1;
    proxy_send_timeout 30;
    proxy_read_timeout 30;

    auth_basic           "Prometheus Administration Console";
    auth_basic_user_file /run/secrets/prom_admin_creds;
  }

  location / {
    set $target http://player_player:3000;
    rewrite ^/(.*) /$1 break;
    proxy_pass $target;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 1;
    proxy_send_timeout 30;
    proxy_read_timeout 30;
    proxy_set_header    X-Forwarded-Proto $scheme;
  }
}
